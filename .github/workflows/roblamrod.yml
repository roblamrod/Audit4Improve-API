name: Flujo de trabajo para ejecutar los test
on:
  workflow_dispatch:
  added_to_project:
    types: [moved_columns_in_project]
  push:
    branches: [ V.0.2 ]
  pull_request:
    branches: [ V.0.2 ]
  schedule:
    - cron: '1 23 * * 0-4'
    
steps:
- uses: actions/first-interaction@v1
  with:
    repo-token: ${{ secrets.GITHUB_TOKEN }}
    issue-message: '# Message with markdown.\nThis is the message that will be displayed on users' first issue.'
    pr-message: 'Message that will be displayed on users' first pr. Look, a `code block` for markdown.'
  
jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Construyendo y probando el código
        run: |
          chmod +x gradlew        
          ./gradlew assemble

  Test:
    runs-on: ubuntu-latest
    needs: Build
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'
      - name: Construyendo y probando el código
        run: |
          chmod +x gradlew        
          ./gradlew test